## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#if( $util.authType() == "API Key Authorization" )

#end
#if( $util.authType() == "IAM Authorization" )
  #foreach( $adminRole in $ctx.stash.adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #return($util.toJson({}))
    #end
  #end
  #if( !$isAuthorized )
    #if( $ctx.identity.userArn == $ctx.stash.authRole )
      #set( $isAuthorized = true )
    #end
  #end
#end
#if( $util.authType() == "User Pool Authorization" )
  ##$util.log.info("CONTEXTO:")
  ##$util.log.info($util.toJson($ctx))
  #set( $ModelName=$ctx.stash.tableName.split("-")[0])
  $util.log.info("MODELNAME: $ModelName")
  #foreach( $equipe in $ctx.identity.groups)

        #if($equipe.contains("orggroup"))

           #set( $orggroup = $equipe)
           #set( $len = $orggroup.length() )
           #if( $len == 44 || $len == 45 )
            $util.log.info("REVENDA")
            
            #set( $orgID = $orggroup.replace("orggroup-","") )
            $util.log.info("ORGID: $orgID")

            ##primeira parte do UUID da revenda
            #set( $uuid1 = $orgID.substring(0,8) )
            $util.log.info("UUID1: $uuid1")

            ##montando string para BEGINS_WITH
            #set( $beginsWith = $uuid1 )
            $util.log.info("beginsWith: $beginsWith")

            ##prepara filtro 
            #if( $ModelName == "Group" )
              #set($dynamicField = "orgIdEquipe")
            #else
              #set($dynamicField = "org"+$ModelName+"Id")
            #end
            $util.qr($ctx.stash.put("authFilter",{
            $dynamicField: {"beginsWith": $beginsWith}
          }))            
            
           #elseif( $len == 54 )
            $util.log.info("CLIENTE")
            #set( $orgID = $orggroup.replace("orggroup-","") )
            #set( $newOrgName = $orgID.substring(0,8) + $orgID.substring(9,$orgID.length()) )
            #set( $orgID = $newOrgName )
            
            $util.log.info("ORGID: $orgID")

            ##prepara filtro 
            #if( $ModelName == "Group" )
              #set($dynamicField = "orgIdEquipe")
            #else
              #set($dynamicField = "org"+$ModelName+"Id")
            #end
             $util.qr($ctx.stash.put("authFilter",{
            $dynamicField: {"eq": $orgID}
          }))  

           #end
           

        #end
   #end
   
   $util.log.info("ORGGROUP $orggroup")
  
  
  #set( $isAuthorized = true )
#end
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **